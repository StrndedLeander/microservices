{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "API Gateway resource stack creation using Amplify CLI",

  "Parameters": {},

  "Resources": {
    "PolicyAPIGWmicroservices50f5b4f9auth": {
      "DependsOn": ["microservices50f5b4f9"],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "PolicyAPIGWmicroservices50f5b4f9auth",
        "Roles": ["microservices-20190203145853-authRole"],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["execute-api:Invoke"],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "microservices50f5b4f9"
                      },
                      "/Prod/*",
                      "/auth/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "microservices50f5b4f9"
                      },
                      "/Prod/*",
                      "/auth"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },

    "PolicyAPIGWmicroservices50f5b4f9unauth": {
      "DependsOn": ["microservices50f5b4f9"],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "PolicyAPIGWmicroservices50f5b4f9unauth",
        "Roles": ["microservices-20190203145853-unauthRole"],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["execute-api:Invoke"],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "microservices50f5b4f9"
                      },
                      "/Prod/*",
                      "/auth/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "microservices50f5b4f9"
                      },
                      "/Prod/*",
                      "/auth"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },

    "microservices50f5b4f9": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "",
        "Name": "microservices50f5b4f9",
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "2018-05-24T17:52:00Z",
            "title": "microservices50f5b4f9"
          },
          "host": {
            "Fn::Join": [
              "",
              [
                "apigateway.",
                {
                  "Ref": "AWS::Region"
                },
                ".amazonaws.com"
              ]
            ]
          },
          "basePath": "/Prod",
          "schemes": ["https"],
          "paths": {
            "/auth": {
              "options": {
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock"
                }
              },
              "x-amazon-apigateway-any-method": {
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                  {
                    "in": "body",
                    "name": "RequestSchema",
                    "required": false,
                    "schema": {
                      "$ref": "#/definitions/RequestSchema"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/ResponseSchema"
                    }
                  }
                },

                "security": [
                  {
                    "sigv4": []
                  }
                ],

                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",

                        "arn:aws:lambda:eu-central-1:719968013321:function:addUserToDdb",

                        "/invocations"
                      ]
                    ]
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "type": "aws_proxy"
                }
              }
            },
            "/auth/{proxy+}": {
              "options": {
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock"
                }
              },
              "x-amazon-apigateway-any-method": {
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                  {
                    "in": "body",
                    "name": "RequestSchema",
                    "required": false,
                    "schema": {
                      "$ref": "#/definitions/RequestSchema"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/ResponseSchema"
                    }
                  }
                },

                "security": [
                  {
                    "sigv4": []
                  }
                ],

                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",

                        "arn:aws:lambda:eu-central-1:719968013321:function:addUserToDdb",

                        "/invocations"
                      ]
                    ]
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "type": "aws_proxy"
                }
              }
            }
          },
          "securityDefinitions": {
            "sigv4": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "awsSigv4"
            }
          },
          "definitions": {
            "RequestSchema": {
              "type": "object",
              "required": ["request"],
              "properties": {
                "request": {
                  "type": "string"
                }
              },
              "title": "Request Schema"
            },
            "ResponseSchema": {
              "type": "object",
              "required": ["response"],
              "properties": {
                "response": {
                  "type": "string"
                }
              },
              "title": "Response Schema"
            }
          }
        },
        "FailOnWarnings": true
      }
    },

    "functionaddUserToDdbPermissionmicroservices50f5b4f9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "arn:aws:lambda:eu-central-1:719968013321:function:addUserToDdb",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "microservices50f5b4f9"
              },
              "/*/*/*"
            ]
          ]
        }
      }
    },

    "DeploymentAPIGWmicroservices50f5b4f9": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "The Development stage deployment of your API.",
        "StageName": "Prod",
        "RestApiId": {
          "Ref": "microservices50f5b4f9"
        }
      }
    }
  },
  "Outputs": {
    "RootUrl": {
      "Description": "Root URL of the API gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { "Ref": "microservices50f5b4f9" },
            ".execute-api.",
            { "Ref": "AWS::Region" },
            ".amazonaws.com/Prod"
          ]
        ]
      }
    },
    "ApiName": {
      "Description": "API Friendly name",
      "Value": "usersAuthAPI"
    }
  }
}
